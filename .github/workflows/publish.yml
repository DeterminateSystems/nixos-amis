name: Upload Amazon Images

permissions:
  contents: read

on:
  pull_request:
  merge_group:
  push:
    branches: [ main ]

jobs:
  nix-checks:
    name: Basic Nix checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - run: |
          echo foo

  debug-oidc:
    name: debug-oidc
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout actions-oidc-debugger
        uses: actions/checkout@v3
        with:
          repository: github/actions-oidc-debugger
          ref: main
          path: ./.github/actions/actions-oidc-debugger
      - name: Debug OIDC Claims
        uses: ./.github/actions/actions-oidc-debugger
        with:
          audience: https://flakehub.com
      - run: |
          echo "about to try assume role with token with aud=sts.amazonaws.com+${{ github.event_name }}"
      - uses: aws-actions/configure-aws-credentials@v4
        if: github.event_name == 'merge_group' || github.event_name == 'push'
        with:
          role-to-assume: arn:aws:iam::535002876703:role/upload-ami
          audience: sts.amazonaws.com+${{ github.event_name }}
          aws-region: us-east-2

  build-ami:
    name: Upload NixOS AMI
    runs-on: ${{ matrix.system.runner }}
    permissions:
      contents: read
      id-token: write
    env:
      s3-bucket: detsys-nixos-images-20240916205705854200000001
    strategy:
      matrix:
        system:
          - nix-system: x86_64-linux
            runner: ubuntu-latest
          - nix-system: aarch64-linux
            runner: UbuntuLatest32Cores128GArm
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          flakehub: true
          extra-conf: |
            extra-system-features = kvm

      - run: |
          echo lol

  cache-dev-environment:
    name: Cache Nix development environment in FlakeHub Cache
    runs-on: ${{ matrix.system.runner }}
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        system:
          - nix-system: x86_64-linux
            runner: ubuntu-latest
          - nix-system: aarch64-linux
            runner: UbuntuLatest32Cores128GArm
    steps:
      - run: |
          echo lol

  block-final-merge-while-debug:
    name: Block Merge
    runs-on: ubuntu-latest
    if: github.event_name == 'merge_group'
    steps:
      - run: |
          sleep 1000000