name: Upload Amazon Images
permissions:
  contents: read
on:
  pull_request:
  workflow_dispatch:
    inputs:
      bootstrap_aws:
        description: "Run initial bootstrapping steps"
        required: false
        type: boolean
        default: false
      increase_ami_limit:
        description: |
          Open support tickets in all applicable regions to raise the limit.
          Warning: may open duplicate tickets in a region if that region has an existing open ticket.
        required: false
        type: boolean
        default: false

  schedule:
    - cron: "0 0 * * 0"
jobs:
  build-ami:
    name: Upload Amazon Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        release:
          - release-24.05
        # - nixos-unstable
        system:
          - x86_64-linux
        #- aarch64-linux
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          flakehub: true

      # note: no magic-nix-cache. The build is nearly trivial, except for the gigantic disk image at the end.
      # No need to cache that monstrosity.

      - run: nix build -L .#diskImages.x86_64-linux.aws

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::535002876703:role/upload-ami
          aws-region: us-east-2

      - name: Enable all regions
        timeout-minutes: 30
        if: ${{ inputs.bootstrap_aws }}
        run: |
          while ! nix run .#enable-regions; do
              echo "retrying in 1m"
              sleep 60
          done
      - name: Wait for all regions to be enabled
        timeout-minutes: 30
        if: ${{ inputs.bootstrap_aws }}
        run: |
          aws account list-regions --output table
          while true; do
              aws account list-regions --region-opt-status-contains ENABLING  --output text > pending
              if [[ "$(cat pending | wc -l)" -eq 0 ]]; then
                  echo "done"
                  break
              fi

              echo "remaining:"
              cat pending
              echo "retry in 1m"
              sleep 60
          done

          echo "Final enumeration:"
          aws account list-regions

      - name: Enable AMI sharing
        timeout-minutes: 30
        if: ${{ inputs.bootstrap_aws }}
        run: |
          while ! nix run .#disable-image-block-public-access; do
              echo "retrying in 1m"
              sleep 60
          done

      - name: Increase AMI limit
        if: ${{ inputs.increase_ami_limit }}
        run: nix run .#request-public-ami-quota-increase -- --desired-value 1000

      - name: Upload Smoke test AMI
        id: upload_smoke_test_ami
        run: |
          image_ids=$(nix run github:NixOS/amis#upload-ami -- \
              --image-info "./result/nix-support/image-info.json" \
              --prefix "smoketest/" \
              --s3-bucket "detsys-nixos-images-20240916205705854200000001" \
              --run-id "${GITHUB_RUN_ID}")
          echo "image_ids=$image_ids" >> "$GITHUB_OUTPUT"

      - name: Smoke test
        id: smoke_test
        # NOTE: make sure smoke test isn't cancelled. Such that instance gets cleaned up.
        run: |
          image_ids='${{ steps.upload_smoke_test_ami.outputs.image_ids }}'
          image_id=$(echo "$image_ids" | jq -r '.["us-east-2"]')
          nix run github:NixOS/amis#smoke-test -- --image-id "$image_id"

      - name: Clean up smoke test
        if: ${{ cancelled() }}
        run: |
          image_ids='${{ steps.upload_smoke_test_ami.outputs.image_ids }}'
          image_id=$(echo "$image_ids" | jq -r '.["us-east-2"]')
          nix run github:NixOS/amis#smoke-test -- --image-id "$image_id" --cancel
      - name: Upload AMIs to all available regions
        if: github.ref == 'refs/heads/main'
        run: |
          nix run github:NixOS/amis#upload-ami -- \
              --image-info "./result/nix-support/image-info.json" \
              --prefix "nixos/" \
              --s3-bucket "detsys-nixos-images-20240916205705854200000001" \
              --run-id "${GITHUB_RUN_ID}" \
              --copy-to-regions \
              --public
